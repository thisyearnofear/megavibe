/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/filcdn/auth/route";
exports.ids = ["app/api/filcdn/auth/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "node:crypto":
/*!******************************!*\
  !*** external "node:crypto" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:crypto");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?fbb2":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?33bc":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffilcdn%2Fauth%2Froute&page=%2Fapi%2Ffilcdn%2Fauth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffilcdn%2Fauth%2Froute.ts&appDir=%2FUsers%2Fudingethe%2FDev%2Fmegavibe%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fudingethe%2FDev%2Fmegavibe%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffilcdn%2Fauth%2Froute&page=%2Fapi%2Ffilcdn%2Fauth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffilcdn%2Fauth%2Froute.ts&appDir=%2FUsers%2Fudingethe%2FDev%2Fmegavibe%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fudingethe%2FDev%2Fmegavibe%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_udingethe_Dev_megavibe_frontend_src_app_api_filcdn_auth_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/filcdn/auth/route.ts */ \"(rsc)/./src/app/api/filcdn/auth/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/filcdn/auth/route\",\n        pathname: \"/api/filcdn/auth\",\n        filename: \"route\",\n        bundlePath: \"app/api/filcdn/auth/route\"\n    },\n    resolvedPagePath: \"/Users/udingethe/Dev/megavibe/frontend/src/app/api/filcdn/auth/route.ts\",\n    nextConfigOutput,\n    userland: _Users_udingethe_Dev_megavibe_frontend_src_app_api_filcdn_auth_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/filcdn/auth/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZmaWxjZG4lMkZhdXRoJTJGcm91dGUmcGFnZT0lMkZhcGklMkZmaWxjZG4lMkZhdXRoJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGZmlsY2RuJTJGYXV0aCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnVkaW5nZXRoZSUyRkRldiUyRm1lZ2F2aWJlJTJGZnJvbnRlbmQlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGdWRpbmdldGhlJTJGRGV2JTJGbWVnYXZpYmUlMkZmcm9udGVuZCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUN1QjtBQUNwRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzZKOztBQUU3SiIsInNvdXJjZXMiOlsid2VicGFjazovL21lZ2F2aWJlLWZyb250ZW5kLz9mNzM3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy91ZGluZ2V0aGUvRGV2L21lZ2F2aWJlL2Zyb250ZW5kL3NyYy9hcHAvYXBpL2ZpbGNkbi9hdXRoL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9maWxjZG4vYXV0aC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2ZpbGNkbi9hdXRoXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9maWxjZG4vYXV0aC9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy91ZGluZ2V0aGUvRGV2L21lZ2F2aWJlL2Zyb250ZW5kL3NyYy9hcHAvYXBpL2ZpbGNkbi9hdXRoL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL2ZpbGNkbi9hdXRoL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIGhlYWRlckhvb2tzLCBzdGF0aWNHZW5lcmF0aW9uQmFpbG91dCwgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffilcdn%2Fauth%2Froute&page=%2Fapi%2Ffilcdn%2Fauth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffilcdn%2Fauth%2Froute.ts&appDir=%2FUsers%2Fudingethe%2FDev%2Fmegavibe%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fudingethe%2FDev%2Fmegavibe%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/filcdn/auth/route.ts":
/*!******************************************!*\
  !*** ./src/app/api/filcdn/auth/route.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _services_filcdn_realFilcdnService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/services/filcdn/realFilcdnService */ \"(rsc)/./src/services/filcdn/realFilcdnService.ts\");\n\n\n// Initialize FilCDN service with private key from server environment\nconst filcdnService = (0,_services_filcdn_realFilcdnService__WEBPACK_IMPORTED_MODULE_1__.createRealFilCDNService)({\n    privateKey: process.env.FILCDN_PRIVATE_KEY || process.env.FILECOIN_PRIVATE_KEY || process.env.PRIVATE_KEY,\n    rpcURL: \"https://api.calibration.node.glif.io/rpc/v1\" || 0,\n    withCDN: true\n});\n// Track initialization state\nlet isInitialized = false;\nlet initError = null;\nlet initializationPromise = null;\n// Initialize the service\nasync function ensureInitialized() {\n    if (isInitialized) return;\n    if (!initializationPromise) {\n        initializationPromise = (async ()=>{\n            try {\n                await filcdnService.initialize();\n                isInitialized = true;\n                initError = null;\n            } catch (err) {\n                console.error(\"Failed to initialize FilCDN service:\", err);\n                initError = err.message;\n                throw err;\n            }\n        })();\n    }\n    await initializationPromise;\n}\nasync function GET() {\n    try {\n        await ensureInitialized();\n        // Get service stats\n        const stats = await filcdnService.getStats();\n        // Return status and authentication token for client\n        // Note: We don't return any sensitive information\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            status: \"authenticated\",\n            initialized: isInitialized,\n            stats: {\n                network: stats.network,\n                withCDN: stats.withCDN,\n                proofSetId: stats.proofSetId,\n                lastUpdated: stats.lastUpdated\n            }\n        });\n    } catch (err) {\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            status: \"error\",\n            message: `FilCDN initialization failed: ${err.message}`,\n            initialized: false\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9maWxjZG4vYXV0aC9yb3V0ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDc0I7QUFFOUUscUVBQXFFO0FBQ3JFLE1BQU1FLGdCQUFnQkQsMkZBQXVCQSxDQUFDO0lBQzVDRSxZQUFZQyxRQUFRQyxHQUFHLENBQUNDLGtCQUFrQixJQUFJRixRQUFRQyxHQUFHLENBQUNFLG9CQUFvQixJQUFJSCxRQUFRQyxHQUFHLENBQUNHLFdBQVc7SUFDekdDLFFBQVFMLDZDQUF3QyxJQUFJLENBQTZDO0lBQ2pHTyxTQUFTO0FBQ1g7QUFFQSw2QkFBNkI7QUFDN0IsSUFBSUMsZ0JBQWdCO0FBQ3BCLElBQUlDLFlBQTJCO0FBQy9CLElBQUlDLHdCQUE4QztBQUVsRCx5QkFBeUI7QUFDekIsZUFBZUM7SUFDYixJQUFJSCxlQUFlO0lBRW5CLElBQUksQ0FBQ0UsdUJBQXVCO1FBQzFCQSx3QkFBd0IsQ0FBQztZQUN2QixJQUFJO2dCQUNGLE1BQU1aLGNBQWNjLFVBQVU7Z0JBQzlCSixnQkFBZ0I7Z0JBQ2hCQyxZQUFZO1lBQ2QsRUFBRSxPQUFPSSxLQUFVO2dCQUNqQkMsUUFBUUMsS0FBSyxDQUFDLHdDQUF3Q0Y7Z0JBQ3RESixZQUFZSSxJQUFJRyxPQUFPO2dCQUN2QixNQUFNSDtZQUNSO1FBQ0Y7SUFDRjtJQUVBLE1BQU1IO0FBQ1I7QUFFTyxlQUFlTztJQUNwQixJQUFJO1FBQ0YsTUFBTU47UUFFTixvQkFBb0I7UUFDcEIsTUFBTU8sUUFBUSxNQUFNcEIsY0FBY3FCLFFBQVE7UUFFMUMsb0RBQW9EO1FBQ3BELGtEQUFrRDtRQUNsRCxPQUFPdkIsa0ZBQVlBLENBQUN3QixJQUFJLENBQUM7WUFDdkJDLFFBQVE7WUFDUkMsYUFBYWQ7WUFDYlUsT0FBTztnQkFDTEssU0FBU0wsTUFBTUssT0FBTztnQkFDdEJoQixTQUFTVyxNQUFNWCxPQUFPO2dCQUN0QmlCLFlBQVlOLE1BQU1NLFVBQVU7Z0JBQzVCQyxhQUFhUCxNQUFNTyxXQUFXO1lBQ2hDO1FBQ0Y7SUFDRixFQUFFLE9BQU9aLEtBQVU7UUFDakIsT0FBT2pCLGtGQUFZQSxDQUFDd0IsSUFBSSxDQUN0QjtZQUNFQyxRQUFRO1lBQ1JMLFNBQVMsQ0FBQyw4QkFBOEIsRUFBRUgsSUFBSUcsT0FBTyxDQUFDLENBQUM7WUFDdkRNLGFBQWE7UUFDZixHQUNBO1lBQUVELFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWVnYXZpYmUtZnJvbnRlbmQvLi9zcmMvYXBwL2FwaS9maWxjZG4vYXV0aC9yb3V0ZS50cz9iYTUwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tIFwibmV4dC9zZXJ2ZXJcIjtcbmltcG9ydCB7IGNyZWF0ZVJlYWxGaWxDRE5TZXJ2aWNlIH0gZnJvbSBcIkAvc2VydmljZXMvZmlsY2RuL3JlYWxGaWxjZG5TZXJ2aWNlXCI7XG5cbi8vIEluaXRpYWxpemUgRmlsQ0ROIHNlcnZpY2Ugd2l0aCBwcml2YXRlIGtleSBmcm9tIHNlcnZlciBlbnZpcm9ubWVudFxuY29uc3QgZmlsY2RuU2VydmljZSA9IGNyZWF0ZVJlYWxGaWxDRE5TZXJ2aWNlKHtcbiAgcHJpdmF0ZUtleTogcHJvY2Vzcy5lbnYuRklMQ0ROX1BSSVZBVEVfS0VZIHx8IHByb2Nlc3MuZW52LkZJTEVDT0lOX1BSSVZBVEVfS0VZIHx8IHByb2Nlc3MuZW52LlBSSVZBVEVfS0VZLFxuICBycGNVUkw6IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX0ZJTEVDT0lOX1JQQ19VUkwgfHwgXCJodHRwczovL2FwaS5jYWxpYnJhdGlvbi5ub2RlLmdsaWYuaW8vcnBjL3YxXCIsXG4gIHdpdGhDRE46IHRydWVcbn0pO1xuXG4vLyBUcmFjayBpbml0aWFsaXphdGlvbiBzdGF0ZVxubGV0IGlzSW5pdGlhbGl6ZWQgPSBmYWxzZTtcbmxldCBpbml0RXJyb3I6IHN0cmluZyB8IG51bGwgPSBudWxsO1xubGV0IGluaXRpYWxpemF0aW9uUHJvbWlzZTogUHJvbWlzZTx2b2lkPiB8IG51bGwgPSBudWxsO1xuXG4vLyBJbml0aWFsaXplIHRoZSBzZXJ2aWNlXG5hc3luYyBmdW5jdGlvbiBlbnN1cmVJbml0aWFsaXplZCgpIHtcbiAgaWYgKGlzSW5pdGlhbGl6ZWQpIHJldHVybjtcbiAgXG4gIGlmICghaW5pdGlhbGl6YXRpb25Qcm9taXNlKSB7XG4gICAgaW5pdGlhbGl6YXRpb25Qcm9taXNlID0gKGFzeW5jICgpID0+IHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGZpbGNkblNlcnZpY2UuaW5pdGlhbGl6ZSgpO1xuICAgICAgICBpc0luaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgaW5pdEVycm9yID0gbnVsbDtcbiAgICAgIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGYWlsZWQgdG8gaW5pdGlhbGl6ZSBGaWxDRE4gc2VydmljZTpcIiwgZXJyKTtcbiAgICAgICAgaW5pdEVycm9yID0gZXJyLm1lc3NhZ2U7XG4gICAgICAgIHRocm93IGVycjtcbiAgICAgIH1cbiAgICB9KSgpO1xuICB9XG4gIFxuICBhd2FpdCBpbml0aWFsaXphdGlvblByb21pc2U7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQoKSB7XG4gIHRyeSB7XG4gICAgYXdhaXQgZW5zdXJlSW5pdGlhbGl6ZWQoKTtcbiAgICBcbiAgICAvLyBHZXQgc2VydmljZSBzdGF0c1xuICAgIGNvbnN0IHN0YXRzID0gYXdhaXQgZmlsY2RuU2VydmljZS5nZXRTdGF0cygpO1xuICAgIFxuICAgIC8vIFJldHVybiBzdGF0dXMgYW5kIGF1dGhlbnRpY2F0aW9uIHRva2VuIGZvciBjbGllbnRcbiAgICAvLyBOb3RlOiBXZSBkb24ndCByZXR1cm4gYW55IHNlbnNpdGl2ZSBpbmZvcm1hdGlvblxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7XG4gICAgICBzdGF0dXM6IFwiYXV0aGVudGljYXRlZFwiLFxuICAgICAgaW5pdGlhbGl6ZWQ6IGlzSW5pdGlhbGl6ZWQsXG4gICAgICBzdGF0czoge1xuICAgICAgICBuZXR3b3JrOiBzdGF0cy5uZXR3b3JrLFxuICAgICAgICB3aXRoQ0ROOiBzdGF0cy53aXRoQ0ROLFxuICAgICAgICBwcm9vZlNldElkOiBzdGF0cy5wcm9vZlNldElkLFxuICAgICAgICBsYXN0VXBkYXRlZDogc3RhdHMubGFzdFVwZGF0ZWRcbiAgICAgIH1cbiAgICB9KTtcbiAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IFxuICAgICAgICBzdGF0dXM6IFwiZXJyb3JcIiwgXG4gICAgICAgIG1lc3NhZ2U6IGBGaWxDRE4gaW5pdGlhbGl6YXRpb24gZmFpbGVkOiAke2Vyci5tZXNzYWdlfWAsXG4gICAgICAgIGluaXRpYWxpemVkOiBmYWxzZVxuICAgICAgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn0iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwiY3JlYXRlUmVhbEZpbENETlNlcnZpY2UiLCJmaWxjZG5TZXJ2aWNlIiwicHJpdmF0ZUtleSIsInByb2Nlc3MiLCJlbnYiLCJGSUxDRE5fUFJJVkFURV9LRVkiLCJGSUxFQ09JTl9QUklWQVRFX0tFWSIsIlBSSVZBVEVfS0VZIiwicnBjVVJMIiwiTkVYVF9QVUJMSUNfRklMRUNPSU5fUlBDX1VSTCIsIndpdGhDRE4iLCJpc0luaXRpYWxpemVkIiwiaW5pdEVycm9yIiwiaW5pdGlhbGl6YXRpb25Qcm9taXNlIiwiZW5zdXJlSW5pdGlhbGl6ZWQiLCJpbml0aWFsaXplIiwiZXJyIiwiY29uc29sZSIsImVycm9yIiwibWVzc2FnZSIsIkdFVCIsInN0YXRzIiwiZ2V0U3RhdHMiLCJqc29uIiwic3RhdHVzIiwiaW5pdGlhbGl6ZWQiLCJuZXR3b3JrIiwicHJvb2ZTZXRJZCIsImxhc3RVcGRhdGVkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/filcdn/auth/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/services/filcdn/realFilcdnService.ts":
/*!**************************************************!*\
  !*** ./src/services/filcdn/realFilcdnService.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RealFilCDNService: () => (/* binding */ RealFilCDNService),\n/* harmony export */   createRealFilCDNService: () => (/* binding */ createRealFilCDNService)\n/* harmony export */ });\n/* harmony import */ var _filoz_synapse_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @filoz/synapse-sdk */ \"(rsc)/../node_modules/@filoz/synapse-sdk/dist/index.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ethers */ \"(rsc)/./node_modules/ethers/lib.esm/utils/units.js\");\n/**\n * Real FilCDN Service\n * Properly implements FilCDN integration using the Synapse SDK\n */ \n\n// Constants\nconst PROOF_SET_CREATION_FEE = ethers__WEBPACK_IMPORTED_MODULE_1__.parseUnits(\"5\", 18); // 5 USDFC for proof set\nconst BUFFER_AMOUNT = ethers__WEBPACK_IMPORTED_MODULE_1__.parseUnits(\"5\", 18); // 5 USDFC buffer for gas fees\n/**\n * Real FilCDN Service class\n * Provides functionality for interacting with FilCDN via Synapse SDK\n */ class RealFilCDNService {\n    constructor(config = {}){\n        this.config = config;\n        this.synapse = null;\n        this.storage = null;\n        this.initialized = false;\n        this.initializing = false;\n        this.providerInfo = null;\n        this.proofSetId = null;\n        this.stats = {};\n    }\n    /**\n   * Performs preflight checks to ensure sufficient USDFC balance and allowances\n   * @param dataSize Size of data to be stored\n   * @param withProofset Whether a new proofset needs to be created\n   */ async performPreflightCheck(dataSize, withProofset) {\n        if (!this.synapse) {\n            throw new Error(\"Synapse not initialized\");\n        }\n        const network = this.synapse.getNetwork();\n        const pandoraAddress = _filoz_synapse_sdk__WEBPACK_IMPORTED_MODULE_0__.CONTRACT_ADDRESSES.PANDORA_SERVICE[network];\n        const signer = this.synapse.getSigner();\n        if (!signer || !signer.provider) {\n            throw new Error(\"Provider not found\");\n        }\n        // Initialize Pandora service for allowance checks\n        const pandoraService = new _filoz_synapse_sdk__WEBPACK_IMPORTED_MODULE_0__.PandoraService(signer.provider, pandoraAddress);\n        // Check if current allowance is sufficient\n        const preflight = await pandoraService.checkAllowanceForStorage(dataSize, this.config.withCDN || false, this.synapse.payments);\n        // If allowance is insufficient, handle deposit and approval\n        if (!preflight.sufficient) {\n            // Calculate total allowance needed including proofset creation fee if required\n            const proofSetCreationFee = withProofset ? PROOF_SET_CREATION_FEE : BigInt(0);\n            const allowanceNeeded = preflight.lockupAllowanceNeeded + proofSetCreationFee + BUFFER_AMOUNT;\n            console.log(\"Setting up USDFC payments:\");\n            console.log(\"- Base allowance:\", ethers__WEBPACK_IMPORTED_MODULE_1__.formatUnits(preflight.lockupAllowanceNeeded, 18), \"USDFC\");\n            if (withProofset) {\n                console.log(\"- Proof set fee:\", ethers__WEBPACK_IMPORTED_MODULE_1__.formatUnits(PROOF_SET_CREATION_FEE, 18), \"USDFC\");\n            }\n            console.log(\"- Buffer amount:\", ethers__WEBPACK_IMPORTED_MODULE_1__.formatUnits(BUFFER_AMOUNT, 18), \"USDFC\");\n            console.log(\"- Total needed:\", ethers__WEBPACK_IMPORTED_MODULE_1__.formatUnits(allowanceNeeded, 18), \"USDFC\");\n            // Step 1: Deposit USDFC to cover storage costs\n            console.log(\"Depositing USDFC...\");\n            await this.synapse.payments.deposit(allowanceNeeded);\n            console.log(\"USDFC deposited successfully\");\n            // Step 2: Approve Pandora service to spend USDFC at specified rates\n            console.log(\"Approving Pandora service...\");\n            await this.synapse.payments.approveService(pandoraAddress, preflight.rateAllowanceNeeded, allowanceNeeded);\n            console.log(\"Pandora service approved successfully\");\n        } else {\n            console.log(\"✓ Sufficient USDFC allowance already available\");\n        }\n    }\n    /**\n   * Initialize the FilCDN service with Synapse SDK\n   */ async initialize() {\n        if (this.initialized) return;\n        if (this.initializing) {\n            // Wait for initialization to complete\n            let retries = 0;\n            while(this.initializing && retries < 30){\n                await new Promise((resolve)=>setTimeout(resolve, 500));\n                retries++;\n            }\n            if (this.initialized) return;\n            throw new Error(\"Initialization timed out\");\n        }\n        this.initializing = true;\n        try {\n            console.log(\"Initializing FilCDN service with Synapse SDK\");\n            // Initialize Synapse SDK\n            this.synapse = await _filoz_synapse_sdk__WEBPACK_IMPORTED_MODULE_0__.Synapse.create({\n                privateKey: this.config.privateKey || \"\",\n                rpcURL: this.config.rpcURL || _filoz_synapse_sdk__WEBPACK_IMPORTED_MODULE_0__.RPC_URLS.calibration.websocket,\n                withCDN: this.config.withCDN\n            });\n            // Perform initial preflight check with minimum size for proof set creation\n            await this.performPreflightCheck(1024, true); // 1KB minimum size\n            // Create storage service with callbacks\n            this.storage = await this.synapse.createStorage({\n                callbacks: {\n                    onProviderSelected: (provider)=>{\n                        console.log(`✓ Selected storage provider: ${provider.owner}`);\n                        console.log(`  PDP URL: ${provider.pdpUrl}`);\n                        this.providerInfo = {\n                            owner: provider.owner,\n                            pdpUrl: provider.pdpUrl,\n                            speed: 0 // Will be updated later\n                        };\n                    },\n                    onProofSetResolved: (info)=>{\n                        if (info.isExisting) {\n                            console.log(`✓ Using existing proof set: ${info.proofSetId}`);\n                        } else {\n                            console.log(`✓ Created new proof set: ${info.proofSetId}`);\n                        }\n                        this.proofSetId = info.proofSetId;\n                    },\n                    onProofSetCreationStarted: (transaction, statusUrl)=>{\n                        console.log(`  Creating proof set, tx: ${transaction.hash}`);\n                    },\n                    onProofSetCreationProgress: (progress)=>{\n                        if (progress.transactionMined && !progress.proofSetLive) {\n                            console.log(\"  Transaction mined, waiting for proof set to be live...\");\n                        }\n                    }\n                }\n            });\n            // Update stats\n            this.stats = {\n                network: this.synapse.getNetwork(),\n                provider: this.providerInfo,\n                proofSetId: this.proofSetId,\n                withCDN: this.config.withCDN,\n                initialized: true,\n                lastUpdated: Date.now()\n            };\n            this.initialized = true;\n            console.log(\"✅ FilCDN service initialized successfully\");\n        } catch (error) {\n            const message = error instanceof Error ? error.message : \"Unknown error\";\n            console.error(\"❌ FilCDN service initialization failed:\", error);\n            throw new Error(`Failed to initialize FilCDN service: ${message}`);\n        } finally{\n            this.initializing = false;\n        }\n    }\n    /**\n   * Store data on FilCDN\n   * @param data Data to store\n   * @returns Storage result\n   */ async storeData(data) {\n        if (!this.initialized || !this.storage) {\n            await this.initialize();\n        }\n        try {\n            console.log(\"Storing data on FilCDN\");\n            // Convert data to Uint8Array for storage\n            let dataToStore;\n            if (data instanceof Uint8Array) {\n                dataToStore = data;\n            } else if (typeof data === \"string\") {\n                dataToStore = new TextEncoder().encode(data);\n            } else {\n                dataToStore = new TextEncoder().encode(JSON.stringify(data));\n            }\n            // Perform preflight check before upload\n            await this.performPreflightCheck(dataToStore.length, false);\n            // Upload data to FilCDN\n            const result = await this.storage.upload(dataToStore);\n            // Get CDN URL\n            const url = await this.getCDNUrl(result.commp.toString());\n            // Return storage result\n            return {\n                cid: result.commp.toString(),\n                size: dataToStore.length,\n                url,\n                timestamp: Date.now()\n            };\n        } catch (error) {\n            const message = error instanceof Error ? error.message : \"Unknown error\";\n            console.error(\"❌ FilCDN storage failed:\", error);\n            throw new Error(`Failed to store data on FilCDN: ${message}`);\n        }\n    }\n    /**\n   * Retrieve data from FilCDN\n   * @param cid Content identifier\n   * @returns Retrieval result\n   */ async retrieveData(cid) {\n        if (!this.initialized || !this.storage) {\n            await this.initialize();\n        }\n        try {\n            console.log(`Retrieving data from FilCDN for CID: ${cid}`);\n            // Download data from FilCDN\n            const startTime = Date.now();\n            const data = await this.storage.providerDownload(cid);\n            const endTime = Date.now();\n            // Update provider speed stats if available\n            if (this.providerInfo) {\n                this.providerInfo.speed = Math.round(data.length / (endTime - startTime) * 1000); // bytes per second\n            }\n            // Determine MIME type based on data\n            let result;\n            let mimeType = \"application/octet-stream\";\n            try {\n                // Try to parse as JSON\n                const textData = new TextDecoder().decode(data);\n                result = JSON.parse(textData);\n                mimeType = \"application/json\";\n            } catch (e) {\n                // Not JSON, return as-is\n                result = data;\n            }\n            // Return retrieval result\n            return {\n                data: result,\n                mimeType\n            };\n        } catch (error) {\n            const message = error instanceof Error ? error.message : \"Unknown error\";\n            console.error(\"❌ FilCDN retrieval failed:\", error);\n            throw new Error(`Failed to retrieve data from FilCDN: ${message}`);\n        }\n    }\n    /**\n   * Get CDN URL for a content identifier\n   * @param cid Content identifier\n   * @returns CDN URL\n   */ async getCDNUrl(cid) {\n        if (!cid) {\n            throw new Error(\"CID is required\");\n        }\n        // If this.config.withCDN is true, use the CDN URL format\n        if (this.config.withCDN) {\n            // Get the provider's PDP URL if available\n            if (this.providerInfo && this.providerInfo.pdpUrl) {\n                return `${this.providerInfo.pdpUrl}/ipfs/${cid}`;\n            }\n            // Fall back to FilCDN gateway\n            return `https://gateway.filcdn.io/ipfs/${cid}`;\n        }\n        // Fall back to IPFS gateway\n        return `https://ipfs.io/ipfs/${cid}`;\n    }\n    /**\n   * Get statistics about the FilCDN service\n   * @returns Service statistics\n   */ async getStats() {\n        // Update timestamp\n        this.stats.lastUpdated = Date.now();\n        // Add balance information if available\n        if (this.synapse && this.synapse.payments) {\n            try {\n                const balance = await this.synapse.payments.balance();\n                this.stats.balance = ethers__WEBPACK_IMPORTED_MODULE_1__.formatUnits(balance, 18);\n            } catch (e) {\n                console.warn(\"Could not get balance information\", e);\n            }\n        }\n        return this.stats;\n    }\n    /**\n   * Verify that a CID exists and is retrievable\n   * @param cid Content identifier to verify\n   * @returns Whether the content is available\n   */ async verifyCid(cid) {\n        if (!this.initialized || !this.storage) {\n            await this.initialize();\n        }\n        try {\n            // Try to download but only verify availability\n            await this.storage.providerDownload(cid, {\n                onlyVerify: true\n            });\n            return true;\n        } catch (error) {\n            console.warn(`Content verification failed for CID: ${cid}`, error);\n            return false;\n        }\n    }\n}\n/**\n * Create a new FilCDN service instance\n * @param config Service configuration\n * @returns FilCDN service instance\n */ function createRealFilCDNService(config = {}) {\n    return new RealFilCDNService(config);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/services/filcdn/realFilcdnService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/ethers","vendor-chunks/@noble","vendor-chunks/@filoz","vendor-chunks/cborg","vendor-chunks/@web3-storage","vendor-chunks/aes-js","vendor-chunks/multiformats","vendor-chunks/@ipld","vendor-chunks/sync-multihash-sha2"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ffilcdn%2Fauth%2Froute&page=%2Fapi%2Ffilcdn%2Fauth%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ffilcdn%2Fauth%2Froute.ts&appDir=%2FUsers%2Fudingethe%2FDev%2Fmegavibe%2Ffrontend%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fudingethe%2FDev%2Fmegavibe%2Ffrontend&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();