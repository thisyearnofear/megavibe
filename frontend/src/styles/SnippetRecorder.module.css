/* ===========================
   SnippetRecorder Component Styles
   =========================== */

.container {
  width: 600px;
  max-width: 90vw;
  max-height: 80vh;
  overflow-y: auto;
}

.header {
  text-align: center;
  margin-bottom: var(--space-6);
}

.title {
  font-size: var(--font-size-2xl);
  font-weight: var(--font-weight-bold);
  margin-bottom: var(--space-2);
}

.subtitle {
  font-size: var(--font-size-base);
  color: var(--color-text-muted);
}

/* Recording Section */
.recordingSection {
  background-color: var(--color-surface-light);
  border-radius: var(--radius-lg);
  padding: var(--space-6);
  margin-bottom: var(--space-6);
  text-align: center;
}

/* Record Button */
.recordButton {
  width: 120px;
  height: 120px;
  border-radius: var(--radius-full);
  background: linear-gradient(135deg, var(--color-error), #dc2626);
  border: none;
  color: white;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  margin: 0 auto var(--space-4);
  transition: all var(--transition-base);
  position: relative;
  overflow: hidden;
}

.recordButton:hover {
  transform: scale(1.05);
  box-shadow: var(--shadow-lg);
}

.recordButton:active {
  transform: scale(0.98);
}

.recordButton.recording {
  animation: pulse 1.5s ease-in-out infinite;
}

.recordButton.recording::before {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 200%;
  height: 200%;
  background: radial-gradient(
    circle,
    rgba(255, 255, 255, 0.2) 0%,
    transparent 70%
  );
  transform: translate(-50%, -50%);
  animation: ripple 1.5s ease-out infinite;
}

.recordIcon {
  font-size: var(--font-size-3xl);
}

.recordButton.recording .recordIcon {
  animation: blink 1s ease-in-out infinite;
}

@keyframes blink {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

/* Timer */
.timer {
  font-size: var(--font-size-3xl);
  font-weight: var(--font-weight-bold);
  font-family: var(--font-family-mono);
  color: var(--color-error);
  margin-bottom: var(--space-4);
}

.recordingStatus {
  font-size: var(--font-size-base);
  color: var(--color-text-muted);
}

/* Waveform Visualizer */
.waveformVisualizer {
  height: 80px;
  background-color: var(--color-surface);
  border-radius: var(--radius-base);
  margin: var(--space-4) 0;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 var(--space-4);
  overflow: hidden;
}

.waveformBars {
  display: flex;
  align-items: center;
  gap: 2px;
  height: 100%;
}

.waveformBar {
  width: 4px;
  background-color: var(--color-primary);
  border-radius: var(--radius-sm);
  transition: height var(--transition-fast);
}

/* Playback Section */
.playbackSection {
  background-color: var(--color-surface-light);
  border-radius: var(--radius-lg);
  padding: var(--space-5);
  margin-bottom: var(--space-6);
}

.playbackControls {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-4);
  margin-bottom: var(--space-4);
}

.playButton,
.pauseButton {
  width: 60px;
  height: 60px;
  border-radius: var(--radius-full);
  background-color: var(--color-primary);
  color: white;
  border: none;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all var(--transition-fast);
  font-size: var(--font-size-xl);
}

.playButton:hover,
.pauseButton:hover {
  background-color: var(--color-primary-dark);
  transform: scale(1.05);
}

.resetButton {
  background-color: var(--color-surface);
  color: var(--color-text);
}

.resetButton:hover {
  background-color: var(--color-error);
  color: white;
}

.playbackTime {
  font-size: var(--font-size-sm);
  color: var(--color-text-muted);
  text-align: center;
  font-family: var(--font-family-mono);
}

/* Details Section */
.detailsSection {
  margin-bottom: var(--space-6);
}

.formGroup {
  margin-bottom: var(--space-4);
}

.label {
  display: block;
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--color-text);
  margin-bottom: var(--space-2);
}

.input,
.textarea {
  width: 100%;
  padding: var(--space-3);
  background-color: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-base);
  color: var(--color-text);
  font-family: inherit;
  transition: all var(--transition-fast);
}

.input:focus,
.textarea:focus {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
}

.textarea {
  min-height: 100px;
  resize: vertical;
}

.charCount {
  text-align: right;
  font-size: var(--font-size-xs);
  color: var(--color-text-muted);
  margin-top: var(--space-1);
}

/* Tags Input */
.tagsInput {
  display: flex;
  flex-wrap: wrap;
  gap: var(--space-2);
  padding: var(--space-3);
  background-color: var(--color-surface);
  border: 1px solid var(--color-border);
  border-radius: var(--radius-base);
  min-height: 48px;
  cursor: text;
}

.tag {
  display: flex;
  align-items: center;
  gap: var(--space-1);
  background-color: var(--color-primary);
  color: white;
  padding: var(--space-1) var(--space-3);
  border-radius: var(--radius-full);
  font-size: var(--font-size-sm);
}

.tagRemove {
  background: none;
  border: none;
  color: white;
  cursor: pointer;
  padding: 0;
  margin-left: var(--space-1);
  opacity: 0.8;
  transition: opacity var(--transition-fast);
}

.tagRemove:hover {
  opacity: 1;
}

.tagInput {
  flex: 1;
  background: none;
  border: none;
  color: var(--color-text);
  outline: none;
  min-width: 100px;
}

/* Privacy Settings */
.privacySection {
  background-color: var(--color-surface-light);
  border-radius: var(--radius-lg);
  padding: var(--space-4);
  margin-bottom: var(--space-6);
}

.privacyOptions {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
}

.privacyOption {
  display: flex;
  align-items: center;
  gap: var(--space-3);
  cursor: pointer;
}

.radio {
  width: 20px;
  height: 20px;
  border: 2px solid var(--color-border);
  border-radius: var(--radius-full);
  position: relative;
  transition: all var(--transition-fast);
}

.radio.selected {
  border-color: var(--color-primary);
}

.radio.selected::after {
  content: '';
  position: absolute;
  top: 50%;
  left: 50%;
  width: 10px;
  height: 10px;
  background-color: var(--color-primary);
  border-radius: var(--radius-full);
  transform: translate(-50%, -50%);
}

.privacyLabel {
  font-size: var(--font-size-base);
  color: var(--color-text);
}

.privacyDescription {
  font-size: var(--font-size-sm);
  color: var(--color-text-muted);
  margin-left: calc(20px + var(--space-3));
}

/* Actions */
.actions {
  display: flex;
  gap: var(--space-3);
}

.cancelButton {
  flex: 1;
}

.saveButton {
  flex: 2;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: var(--space-2);
}

/* Success State */
.successState {
  text-align: center;
  padding: var(--space-8);
}

.successIcon {
  font-size: 64px;
  margin-bottom: var(--space-4);
  animation: bounce 0.5s ease-out;
}

.successTitle {
  font-size: var(--font-size-2xl);
  font-weight: var(--font-weight-bold);
  color: var(--color-success);
  margin-bottom: var(--space-3);
}

.successMessage {
  font-size: var(--font-size-base);
  color: var(--color-text-muted);
  margin-bottom: var(--space-6);
}

/* Mobile Responsive */
@media (max-width: 768px) {
  .container {
    width: 100%;
  }

  .recordButton {
    width: 100px;
    height: 100px;
  }

  .timer {
    font-size: var(--font-size-2xl);
  }

  .playbackControls {
    gap: var(--space-3);
  }

  .playButton,
  .pauseButton {
    width: 50px;
    height: 50px;
  }

  .actions {
    flex-direction: column-reverse;
  }

  .cancelButton,
  .saveButton {
    width: 100%;
  }
}
